@model ZenithDataLib.Models.Event

@{
    ViewBag.Title = "Create a New Event";
}

<h2>Create a New Event</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger position:relative" })
        <div class="form-group">
            @Html.LabelFor(model => model.DateFrom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" style="position:relative">
                @Html.TextBoxFor(model => model.DateFrom, new { @class = "form-control fromdatepicker", placeholder = "Enter from date" })
                @Html.ValidationMessageFor(model => model.DateFrom, "", new { @class = "text-danger" })
            </div>
         </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateTo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" style="position:relative">
                @Html.TextBoxFor(model => model.DateTo, new { @class = "form-control todatepicker", placeholder = "Enter to date" })
                @Html.ValidationMessageFor(model => model.DateTo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActivityId, "Activity", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ActivityId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ActivityId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">

        $(function () {
            $('.fromdatepicker').datetimepicker({
                minDate: moment()
            });
            $('.todatepicker').datetimepicker({
                minDate: moment(),
                useCurrent: false
            });
            $(".fromdatepicker").on("dp.change", function (e) {
                $('.todatepicker').data("DateTimePicker").minDate(e.date);
            });
            $(".todatepicker").on("dp.change", function (e) {
                $('.fromdatepicker').data("DateTimePicker").maxDate(e.date);

            });
        });
    </script>
}
